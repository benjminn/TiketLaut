// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TiketLaut.Data;

#nullable disable

namespace TiketLaut.Migrations
{
    [DbContext(typeof(TiketLautDbContext))]
    partial class TiketLautDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TiketLaut.Admin", b =>
                {
                    b.Property<int>("admin_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("admin_id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("nama")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("admin_id");

                    b.HasIndex("email")
                        .IsUnique();

                    b.HasIndex("username")
                        .IsUnique();

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("TiketLaut.DetailKendaraan", b =>
                {
                    b.Property<int>("detail_kendaraan_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("detail_kendaraan_id"));

                    b.Property<int>("bobot_unit")
                        .HasColumnType("integer");

                    b.Property<string>("deskripsi")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<decimal>("harga_kendaraan")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("jadwal_id")
                        .HasColumnType("integer");

                    b.Property<string>("jenis_kendaraan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("spesifikasi_ukuran")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("detail_kendaraan_id");

                    b.HasIndex("jadwal_id", "jenis_kendaraan")
                        .IsUnique();

                    b.ToTable("DetailKendaraans");
                });

            modelBuilder.Entity("TiketLaut.Jadwal", b =>
                {
                    b.Property<int>("jadwal_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("jadwal_id"));

                    b.Property<decimal>("harga_golongan_I")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("harga_golongan_II")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("harga_golongan_III")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("harga_golongan_IV_A")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("harga_golongan_IV_B")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("harga_golongan_IX")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("harga_golongan_VII")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("harga_golongan_VIII")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("harga_golongan_VI_A")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("harga_golongan_VI_B")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("harga_golongan_V_A")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("harga_golongan_V_B")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("harga_penumpang")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("kapal_id")
                        .HasColumnType("integer");

                    b.Property<string>("kelas")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("pelabuhan_asal_id")
                        .HasColumnType("integer");

                    b.Property<int>("pelabuhan_tujuan_id")
                        .HasColumnType("integer");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("tanggal_berangkat")
                        .HasColumnType("timestamp with time zone");

                    b.Property<TimeSpan>("waktu_berangkat")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("waktu_tiba")
                        .HasColumnType("interval");

                    b.HasKey("jadwal_id");

                    b.HasIndex("kapal_id");

                    b.HasIndex("pelabuhan_asal_id");

                    b.HasIndex("pelabuhan_tujuan_id");

                    b.ToTable("Jadwals");
                });

            modelBuilder.Entity("TiketLaut.Kapal", b =>
                {
                    b.Property<int>("kapal_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("kapal_id"));

                    b.Property<string>("deskripsi")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<string>("fasilitas")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int>("kapasitas_kendaraan_max")
                        .HasColumnType("integer");

                    b.Property<int>("kapasitas_penumpang_max")
                        .HasColumnType("integer");

                    b.Property<string>("nama_kapal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("kapal_id");

                    b.ToTable("Kapals");
                });

            modelBuilder.Entity("TiketLaut.Notifikasi", b =>
                {
                    b.Property<int>("notifikasi_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("notifikasi_id"));

                    b.Property<int>("admin_id")
                        .HasColumnType("integer");

                    b.Property<int?>("jadwal_id")
                        .HasColumnType("integer");

                    b.Property<string>("jenis_enum_penumpang_update_status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("pengguna_id")
                        .HasColumnType("integer");

                    b.Property<string>("pesan")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<bool>("status_baca")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("waktu_kirim")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.HasKey("notifikasi_id");

                    b.HasIndex("admin_id");

                    b.HasIndex("jadwal_id");

                    b.HasIndex("pengguna_id");

                    b.ToTable("Notifikasis");
                });

            modelBuilder.Entity("TiketLaut.Pelabuhan", b =>
                {
                    b.Property<int>("pelabuhan_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("pelabuhan_id"));

                    b.Property<string>("deskripsi")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<string>("fasilitas")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("kota")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("nama_pelabuhan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("provinsi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("pelabuhan_id");

                    b.ToTable("Pelabuhans");
                });

            modelBuilder.Entity("TiketLaut.Pembayaran", b =>
                {
                    b.Property<int>("pembayaran_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("pembayaran_id"));

                    b.Property<decimal>("jumlah_bayar")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("metode_pembayaran")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("tanggal_bayar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<int>("tiket_id")
                        .HasColumnType("integer");

                    b.HasKey("pembayaran_id");

                    b.HasIndex("tiket_id");

                    b.ToTable("Pembayarans");
                });

            modelBuilder.Entity("TiketLaut.Pengguna", b =>
                {
                    b.Property<int>("pengguna_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("pengguna_id"));

                    b.Property<string>("alamat")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("jenis_kelamin")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("kewarganegaraan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("nama")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("no_hp")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("tanggal_daftar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<DateTime>("tanggal_lahir")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("pengguna_id");

                    b.HasIndex("email")
                        .IsUnique();

                    b.ToTable("Penggunas");
                });

            modelBuilder.Entity("TiketLaut.Penumpang", b =>
                {
                    b.Property<int>("penumpang_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("penumpang_id"));

                    b.Property<string>("NIK_penumpang")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<string>("nama")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("pengguna_id")
                        .HasColumnType("integer");

                    b.HasKey("penumpang_id");

                    b.HasIndex("NIK_penumpang")
                        .IsUnique();

                    b.HasIndex("pengguna_id");

                    b.ToTable("Penumpangs");
                });

            modelBuilder.Entity("TiketLaut.RincianPenumpang", b =>
                {
                    b.Property<int>("rincian_penumpang_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("rincian_penumpang_id"));

                    b.Property<int>("penumpang_id")
                        .HasColumnType("integer");

                    b.Property<int>("tiket_id")
                        .HasColumnType("integer");

                    b.HasKey("rincian_penumpang_id");

                    b.HasIndex("penumpang_id");

                    b.HasIndex("tiket_id", "penumpang_id")
                        .IsUnique();

                    b.ToTable("RincianPenumpangs");
                });

            modelBuilder.Entity("TiketLaut.Tiket", b =>
                {
                    b.Property<int>("tiket_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("tiket_id"));

                    b.Property<int>("jadwal_id")
                        .HasColumnType("integer");

                    b.Property<string>("jenis_kendaraan_enum")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("pengguna_id")
                        .HasColumnType("integer");

                    b.Property<string>("plat_nomor")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("tanggal_pemesanan")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("total_harga")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("tiket_id");

                    b.HasIndex("jadwal_id");

                    b.HasIndex("pengguna_id");

                    b.ToTable("Tikets");
                });

            modelBuilder.Entity("TiketLaut.DetailKendaraan", b =>
                {
                    b.HasOne("TiketLaut.Jadwal", "jadwal")
                        .WithMany("detail_kendaraans")
                        .HasForeignKey("jadwal_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("jadwal");
                });

            modelBuilder.Entity("TiketLaut.Jadwal", b =>
                {
                    b.HasOne("TiketLaut.Kapal", "kapal")
                        .WithMany()
                        .HasForeignKey("kapal_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TiketLaut.Pelabuhan", "pelabuhan_asal")
                        .WithMany()
                        .HasForeignKey("pelabuhan_asal_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Jadwal_Pelabuhan_Asal");

                    b.HasOne("TiketLaut.Pelabuhan", "pelabuhan_tujuan")
                        .WithMany()
                        .HasForeignKey("pelabuhan_tujuan_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Jadwal_Pelabuhan_Tujuan");

                    b.Navigation("kapal");

                    b.Navigation("pelabuhan_asal");

                    b.Navigation("pelabuhan_tujuan");
                });

            modelBuilder.Entity("TiketLaut.Notifikasi", b =>
                {
                    b.HasOne("TiketLaut.Admin", "admin")
                        .WithMany()
                        .HasForeignKey("admin_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TiketLaut.Jadwal", "jadwal")
                        .WithMany()
                        .HasForeignKey("jadwal_id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("TiketLaut.Pengguna", "pengguna")
                        .WithMany()
                        .HasForeignKey("pengguna_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("admin");

                    b.Navigation("jadwal");

                    b.Navigation("pengguna");
                });

            modelBuilder.Entity("TiketLaut.Pembayaran", b =>
                {
                    b.HasOne("TiketLaut.Tiket", "tiket")
                        .WithMany()
                        .HasForeignKey("tiket_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tiket");
                });

            modelBuilder.Entity("TiketLaut.Penumpang", b =>
                {
                    b.HasOne("TiketLaut.Pengguna", "pengguna")
                        .WithMany()
                        .HasForeignKey("pengguna_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("pengguna");
                });

            modelBuilder.Entity("TiketLaut.RincianPenumpang", b =>
                {
                    b.HasOne("TiketLaut.Penumpang", "penumpang")
                        .WithMany()
                        .HasForeignKey("penumpang_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TiketLaut.Tiket", "tiket")
                        .WithMany("rincianPenumpangs")
                        .HasForeignKey("tiket_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("penumpang");

                    b.Navigation("tiket");
                });

            modelBuilder.Entity("TiketLaut.Tiket", b =>
                {
                    b.HasOne("TiketLaut.Jadwal", "jadwal")
                        .WithMany()
                        .HasForeignKey("jadwal_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TiketLaut.Pengguna", "pengguna")
                        .WithMany()
                        .HasForeignKey("pengguna_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("jadwal");

                    b.Navigation("pengguna");
                });

            modelBuilder.Entity("TiketLaut.Jadwal", b =>
                {
                    b.Navigation("detail_kendaraans");
                });

            modelBuilder.Entity("TiketLaut.Tiket", b =>
                {
                    b.Navigation("rincianPenumpangs");
                });
#pragma warning restore 612, 618
        }
    }
}
